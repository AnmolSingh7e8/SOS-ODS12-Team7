<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mapa de Municipios - ODS 12</title>
    <link rel="stylesheet" href="/style/mapaStyle.css">
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
</head>
<body>
    <header>
        <h1>Contacte i Recursos ODS 12</h1>
    </header>
    <nav>
        <ul>
            <li><a href="/">Inici</a></li>
            <li><a href="#contacte">Contacte</a></li>
            <li><a href="#recursos">Recursos</a></li>
            <li><a href="/buscador">Buscador</a></li>
            <li><a href="/mapa">Mapa</a></li>
        </ul>
    </nav>

    <div class="container">
        <h2>Mapa de Municipios (ODS 12)</h2>
        <div id="mapa" style="width:100%;height:600px;"></div>
    </div>

    <script>
      fetch('/api/datos')
        .then(res => res.json())
        .then(datos => {
          // Filtra solo los municipios con lat/lon válidos
          const puntos = datos.filter(d => d.lat && d.lon && !isNaN(d.kg_hab_any));
          const municipios = puntos.map(d => d.municipi);
          const valores = puntos.map(d => parseFloat(d.kg_hab_any));
          const lats = puntos.map(d => d.lat);
          const lons = puntos.map(d => d.lon);

          const trace = {
            type: 'scattergeo',
            mode: 'markers',
            lat: lats,
            lon: lons,
            text: municipios.map((m, i) => `${m}<br>kg/hab/año: ${valores[i]}`),
            marker: {
              size: valores.map(v => Math.sqrt(v) * 2),
              color: valores,
              colorscale: 'YlOrRd',
              colorbar: { title: 'kg/hab/año' },
              line: { color: '#222', width: 1 }
            }
          };

          const layout = {
            geo: {
              scope: 'europe',
              projection: { type: 'mercator' },
              center: { lon: 0, lat: 40 },
              lataxis: { range: [35, 44] },
              lonaxis: { range: [-10, 5] },
              showland: true,
              landcolor: "#eaeaea",
              countrycolor: "#888"
            },
            margin: { t: 0, b: 0, l: 0, r: 0 }
          };

          Plotly.newPlot('mapa', [trace], layout, {responsive: true});
        })
        .catch(err => {
          document.getElementById('mapa').innerHTML = "No se pudieron cargar los datos del mapa.";
          console.error(err);
        });
    </script>

    <footer>
        <p>Team 7</p>
    </footer>
</body>
</html>